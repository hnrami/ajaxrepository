const data = [
    { x: 'tes', y: 'hello world ', z: 'abc' },
    { x: 'tes', y: 'world ', z: 'hello ' },
    { x: 'hello ', y: null, z: 'abc' }, // Example with a null value
];

function findFieldContainingValue(inputJSON, searchValue) {
 const outputJSON = {
        "data": []
    };

    const lowerCaseSearchValue = searchValue.toLowerCase();

    inputJSON.data.forEach(record => {
        for (const key in record) {
            if (record.hasOwnProperty(key) && record[key] !== null && record[key].toLowerCase().includes(lowerCaseSearchValue)) {
                const filteredRecord = {};
                for (const innerKey in record) {
                    if (record.hasOwnProperty(innerKey) && innerKey !== 'field' && innerKey !== 'oprator' && record[innerKey] !== null) {
                        filteredRecord[innerKey] = record[innerKey];
                    }
                }
                outputJSON.data.push(filteredRecord);
                break; // Stop checking other keys once a match is found
            }
        }
    });

    return outputJSON;
}

const searchValue = 'hello';
const matchedRecords = findFieldContainingValue(data, searchValue);

if (matchedRecords.length > 0) {
    console.log(matchedRecords);
} else {
    console.log('No match found');
}

